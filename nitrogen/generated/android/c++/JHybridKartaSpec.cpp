///
/// JHybridKartaSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridKartaSpec.hpp"





namespace margelo::nitro::karta {

  jni::local_ref<JHybridKartaSpec::jhybriddata> JHybridKartaSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridKartaSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridKartaSpec::initHybrid),
    });
  }

  size_t JHybridKartaSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridKartaSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  // Properties
  bool JHybridKartaSpec::getIsRed() {
    static const auto method = javaClassStatic()->getMethod<jboolean()>("isRed");
    auto __result = method(_javaPart);
    return static_cast<bool>(__result);
  }
  void JHybridKartaSpec::setIsRed(bool isRed) {
    static const auto method = javaClassStatic()->getMethod<void(jboolean /* isRed */)>("setRed");
    method(_javaPart, isRed);
  }

  // Methods
  

} // namespace margelo::nitro::karta
