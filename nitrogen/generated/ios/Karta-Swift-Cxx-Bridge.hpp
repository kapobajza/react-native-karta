///
/// Karta-Swift-Cxx-Bridge.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `HybridKartaSpec` to properly resolve imports.
namespace margelo::nitro::karta { class HybridKartaSpec; }

// Forward declarations of Swift defined types
// Forward declaration of `HybridKartaSpec_cxx` to properly resolve imports.
namespace Karta { class HybridKartaSpec_cxx; }

// Include C++ defined types
#include "HybridKartaSpec.hpp"
#include <memory>

/**
 * Contains specialized versions of C++ templated types so they can be accessed from Swift,
 * as well as helper functions to interact with those C++ types from Swift.
 */
namespace margelo::nitro::karta::bridge::swift {

  // pragma MARK: std::shared_ptr<HybridKartaSpec>
  /**
   * Specialized version of `std::shared_ptr<HybridKartaSpec>`.
   */
  using std__shared_ptr_HybridKartaSpec_ = std::shared_ptr<HybridKartaSpec>;
  std::shared_ptr<HybridKartaSpec> create_std__shared_ptr_HybridKartaSpec_(void* _Nonnull swiftUnsafePointer) noexcept;
  void* _Nonnull get_std__shared_ptr_HybridKartaSpec_(std__shared_ptr_HybridKartaSpec_ cppType) noexcept;
  
  // pragma MARK: std::weak_ptr<HybridKartaSpec>
  using std__weak_ptr_HybridKartaSpec_ = std::weak_ptr<HybridKartaSpec>;
  inline std__weak_ptr_HybridKartaSpec_ weakify_std__shared_ptr_HybridKartaSpec_(const std::shared_ptr<HybridKartaSpec>& strong) noexcept { return strong; }

} // namespace margelo::nitro::karta::bridge::swift
