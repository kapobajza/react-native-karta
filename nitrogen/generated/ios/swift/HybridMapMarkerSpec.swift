///
/// HybridMapMarkerSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridMapMarkerSpec``
public protocol HybridMapMarkerSpec_protocol: HybridObject, HybridView {
  // Properties
  var latitude: Double { get set }
  var longitude: Double { get set }

  // Methods
  
}

/// See ``HybridMapMarkerSpec``
open class HybridMapMarkerSpec_base {
  private weak var cxxWrapper: HybridMapMarkerSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridMapMarkerSpec_cxx {
  #if DEBUG
    guard self is HybridMapMarkerSpec else {
      fatalError("`self` is not a `HybridMapMarkerSpec`! Did you accidentally inherit from `HybridMapMarkerSpec_base` instead of `HybridMapMarkerSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridMapMarkerSpec_cxx(self as! HybridMapMarkerSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the MapMarker HybridObject.
 * Implement this protocol to create Swift-based instances of MapMarker.
 * ```swift
 * class HybridMapMarker : HybridMapMarkerSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridMapMarkerSpec = HybridMapMarkerSpec_protocol & HybridMapMarkerSpec_base
