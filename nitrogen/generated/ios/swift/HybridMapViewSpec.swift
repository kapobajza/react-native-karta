///
/// HybridMapViewSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridMapViewSpec``
public protocol HybridMapViewSpec_protocol: HybridObject, HybridView {
  // Properties
  var latitude: Double { get set }
  var longitude: Double { get set }
  var zoom: Double { get set }
  var children: Variant_MapViewChildren__MapViewChildren_? { get set }

  // Methods
  
}

/// See ``HybridMapViewSpec``
open class HybridMapViewSpec_base {
  private weak var cxxWrapper: HybridMapViewSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridMapViewSpec_cxx {
  #if DEBUG
    guard self is HybridMapViewSpec else {
      fatalError("`self` is not a `HybridMapViewSpec`! Did you accidentally inherit from `HybridMapViewSpec_base` instead of `HybridMapViewSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridMapViewSpec_cxx(self as! HybridMapViewSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the MapView HybridObject.
 * Implement this protocol to create Swift-based instances of MapView.
 * ```swift
 * class HybridMapView : HybridMapViewSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridMapViewSpec = HybridMapViewSpec_protocol & HybridMapViewSpec_base
